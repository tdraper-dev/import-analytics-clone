name: "A Test Component Import Count"
description: "Count component import instances"

inputs:
  checkout:
    description: "Specifies if this action should checkout the code"
    required: false
    default: "true"
  library:
    description: "Name of library whose component instance we will count"
    required: true
  imports:
    description: "Names components whose instances we will count, please pass as a stringified array"
    required: true
  hosting:
    description: "Hosting service"
    required: false
    default: "github"
  protocol:
    description: "Security protocol for github access"
    required: false
    default: "https"
  branch:
    description: "Branch off of which to read import count"
    required: false
    default: "main"
  password_token:
    description: "Password for cloning into repo"
    required: true
  username:
    description: "Username for cloning into repo"
    required: false
    default: ${{ github.repository_owner }}

runs:
  using: "composite"
  steps:
    - name: "Checkout if required"
      if: ${{ inputs.checkout == 'true'}}
      uses: actions/checkout@v3

    - id: "repo-basename"
      run: |
        echo "value=`basename ${{ github.repository }}`" >> $GITHUB_OUTPUT
      shell: bash

    - name: "Write JSON File"
      shell: bash
      run: |
        echo "value=`basename ${{ github.repository }}`" >> $GITHUB_OUTPUT
        echo '
          {
            "library": {
              "name": "${{ inputs.library }}",
              "imports": ${{ inputs.imports }}
            },
            "repos": [{
              "name": "${{ steps.repo-basename.outputs.value }}"
            }],
            "git": {
              "username": "${{ inputs.username }}",
              "password": "${{ inputs.password_token }}",
              "owner": "${{ github.repository_owner }}",
              "protocol": "${{ inputs.protocol }}",
              "hosting": "${{ inputs.hosting }}",
              "branch": "${{ inputs.branch }}"
            }
          }
        ' > "${GITHUB_ACTION_PATH}/input.json"

    - name: âŽ” Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Run Primary script
      shell: bash
      run: cd ${GITHUB_ACTION_PATH} && npm install && npm run build && node ${GITHUB_ACTION_PATH}/dist/index.js

    - name: Print final output
      shell: bash
      run: |
        echo "Results:"
        cat "${GITHUB_ACTION_PATH}/output.json"
        echo -e "\nErrors:"
        cat "${GITHUB_ACTION_PATH}/errors.json"
